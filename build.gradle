plugins {
    id 'com.github.erdi.idea-base' version '2.2'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

wrapper {
    gradleVersion = '7.4.2'
    distributionType = Wrapper.DistributionType.ALL
}

allprojects {
    repositories {
        mavenCentral()
    }

    /*
        Inspired by https://solidsoft.wordpress.com/2014/11/13/gradle-tricks-display-dependencies-for-all-subprojects-in-multi-project-build/

        For example:
        gw allDeps --configuration implementation
        gw allDeps --configuration testImplementation
        gw allDeps --configuration api
    */
    task allDeps(type: DependencyReportTask) {}
}

asciidoctor {
    sourceDir file('.')
    sources {
        include 'readme.adoc'
    }
    outputDir file('build/docs')
}

subprojects {
    version = '0.1'
}

// Effectively a list of projects below is all subprojects. 
// In that case instead of configure(...) syntax one could use simply 'subprojects'
// That configure(...) is useful when one needs to apply it only to a subset of subprojects.

configure(subprojects.findAll {
    [
        'fun-with-groovy',
        'geb-bare-bone',
        'grokalg',
        'misc',
        'parameterize',
        'run-me'
    ].contains(it.name)
}) {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'idea'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    dependencies {
        implementation 'org.apache.ivy:ivy:2.5.0' // Not really needed... it's for IntelliJ
        implementation 'org.codehaus.groovy:groovy-all:3.0.10'
        implementation 'org.slf4j:slf4j-api:2.0.0-alpha6'
        implementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'
        def spockVersion = '2.1-M2-groovy-3.0'
        testImplementation "org.spockframework:spock-core:${spockVersion}", {
            exclude group: 'org.codehaus.groovy'
        }
        // New Junit...
        testImplementation 'org.junit.platform:junit-platform-testkit:1.8.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

        testImplementation('com.athaydes:spock-reports:2.3.0-groovy-3.0') {
            transitive = false
        }
    }

    tasks.withType(Test) {
        testLogging {
            showStandardStreams = true
            events 'passed', 'failed'
            exceptionFormat 'full'

            debug {
                events 'passed', 'skipped', 'failed'
                showStackTraces true
                exceptionFormat 'full'
            }
        }
        useJUnitPlatform()
    }
}
